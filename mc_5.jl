using JuMP, CPLEX, Distributions, LinearAlgebra

n = 100
m = 5
#= mu=[87.07931051754268 1.885674719768382 91.19989721737635 34.56176127646072 19.55643810168001 58.65196451393668 91.29085333409998 9.672821513223296 37.01604969821951 51.9785280595715 57.24601692936437 34.06979949532624 84.78670438876435 53.63336435367351 87.1252884111481 47.7440166422045 4.8144636930481655 35.90833569864085 10.607478591094521 24.482281968054608 39.150269417699256 83.46304394815066 18.04538884457022 37.90577113522119 73.68614782513113 57.472140743030586 74.06816139205236 95.91707486212266 29.42078369266782 48.136821720971135 10.119072733212231 89.37519880333582 98.54889574645983 66.11210735972625 54.406869918522005 42.79208793235407 15.969022422541768 5.338317392293524 18.849653844473934 31.38991176376863 49.156939322486004 40.563719646662086 32.370266047771764 24.464445241306898 10.989911705578226 2.370896091690955 84.60939765176511 73.55072300821539 99.57752627275413 37.80502524766962 14.046678905296728 66.39443915219906 58.6089978355361 95.50947541458453 26.43768489534546 94.97637476861263 0.9814915745096187 35.821464662781366 60.042203122584645 73.45146238267289 28.277789882000448 15.984345260302057 63.72515274684951 18.559269380449006 42.10088854705586 54.24665057338661 98.4752189280723 23.844311427168986 92.87787118493993 78.97408366351517 0.7754629974755289 10.57231407278081 38.12367815064226 65.38169002802587 18.088913470228675 42.34382847045393 75.13887535728213 41.47786947879314 31.35005682789552 42.00460068187169 99.92321689434036 51.40854263053922 55.129084019797524 45.59520681620868 23.376708439284112 95.73326070864644 83.62370396889465 89.98797281983074 54.947434615144054 69.996883288631 70.02669141544472 25.966246875682643 28.482902986030656 41.29703056738162 72.74520009136593 38.754799321633485 86.06581636892467 58.781751266729245 81.50962545108715 2.144025974637176 59.85037496130696 92.30061687813411 58.62415650703797 64.55162886100568 83.4396968437113]
a=[50.1119995902865 15.132667567399782 4.010341790959949 32.68443851752396 70.6821013782562 43.17163329490044 3.1676351196712083 12.101242739575447 36.071974614903176 3.4100185059406374 17.984417984663693 18.85928418981191 42.850917221929144 67.29722306463239 87.99165111677935 85.73668559430288 30.695428926244528 26.45050291060882 34.5465045129677 61.16699525008232 65.63130888557198 32.01100318901019 99.69339896134137 20.942969651804045 0.33125265786618785 1.8945177833471827 35.237056527735554 14.85574437141397 8.985945618786351 88.77332057302942 52.813201148679134 53.90800079769785 37.031212907207845 29.627203907190214 32.3294904998633 9.415673336022202 82.88215653643168 78.75028698991962 82.82800999900903 1.099200600528638 42.1066703906676 53.98537993716045 7.129257165506786 24.657584978778512 42.51030416829833 66.8460227104298 38.95347271438274 28.68611979966944 87.21334722340482 82.5616988468781 5.775576761939383 6.1905913171843014 85.29258942976988 39.02545112486811 63.76884418421361 37.79100508636964 35.30635436314201 52.06516512188751 97.30137032496232 35.867149121784756 11.931463489635286 25.567764038922924 16.270785914615125 69.19749559449953 56.41431004362608 37.93355063164524 51.156455286986066 69.67871538333354 99.4983306969822 91.26225094190947 19.03261146491827 20.791154754077457 28.3436330216989 13.15546497671044 74.25481101359705 47.900992966449586 96.1235656780894 47.982333105045036 80.89996031847342 10.250810087718376 21.482312107660583 73.5358668673205 9.277578787749496 36.78592262749652 6.9070938089432214 91.53182391496698 40.54804118110981 74.6061914361274 82.65047384455951 0.9500928815269982 72.92133795950625 36.06339114258933 36.371973846836994 2.752702940669305 12.15114134602321 92.85816278331049 80.27135937311417 72.59258812436958 70.9675749964615 13.678653411569897 42.35402433811489 69.95222589674293 1.674166243519959 53.63681746335867 94.40196795079719]
b=2332.3842591442863
sigma=[0.02466635472119416, 0.7751272885646003, 42.849743854825086, 17.816704585644484, 14.127785121902534, 4.89084558984959, 64.68860941200283, 2.3015576962048345, 24.893746590440525, 0.40968592338509924, 13.867135936830303, 23.15183914957121, 27.97788839771546, 47.151613564271806, 41.62609274654936, 28.109797457691876, 2.3488092433007783, 33.40960552782956, 7.915751468945418, 19.120007204514472, 31.512450978627346, 27.10902675513179, 0.32366127311918796, 9.812264764299744, 15.557986305905514, 17.804259852905417, 5.035260795922837, 92.74062276709624, 0.4127910230824477, 15.862126327262938, 7.069641743917185, 72.00774239483813, 33.75378991424091, 60.62539083210399, 48.53588063503427, 12.296646623134666, 12.881642625143478, 2.1466551266443203, 0.12650841245669106, 15.249901637793867, 28.211568285168866, 39.65743649115649, 8.121117829749945, 21.783800446729252, 10.25125237383051, 1.6020245707421281, 69.10655947185933, 71.79728971116913, 19.532749753056454, 37.17207458497488, 9.52857383870254, 0.19369689455366876, 2.872388596868621, 44.832023238431525, 19.781248697468715, 67.21599917247914, 0.5842695665256902, 2.0993026571714077, 37.16570310033916, 64.49874025268134, 7.585170506867685, 13.300095935638875, 4.104093152778556, 17.070474938568857, 11.39055692299904, 14.172507135054728, 6.3902701487598685, 8.683621325796723, 58.29525566360567, 56.27164723595722, 0.17481417821528877, 6.257897789002774, 31.952593103457765, 16.142118234891786, 14.005077559097815, 34.72636783627575, 72.0337316913522, 35.2276486595028, 14.277740350645663, 11.307082863794752, 75.48387126710834, 22.139389035496137, 18.4680923940578, 18.39304309900751, 1.46113700744102, 55.21410430375834, 38.09949745226924, 73.29391201354154, 48.81662291583136, 64.4925115006793, 14.014113219349364, 4.020720421711663, 21.74692067583448, 0.04003753412752601, 65.62281059590936, 24.30373522291825, 58.329154940689804, 5.6585113650707815, 3.964061807165238, 1.7774777444304746, 54.41855767607286, 60.981426131318365, 5.278750666201518, 54.12528735344736, 69.73673278698027]
 =#

#=0.1  mu=[33.47809027249752 46.88212609004797 27.68076234489151 22.733352170964082 57.616684108834804 73.11638442890509 50.81450221367425 49.54038801960492 6.831869295033821 80.0293135968174 81.89364339471578 16.34171440586858 26.83662684664474 75.42877044243289 72.19696406146302 42.82203509908885 55.229084087426564 69.7197837721098 97.51325458708911 89.27680307160398 75.32932658084981 33.9068782672489 20.47654330474291 74.15240142813693 34.7779968520358 3.1864514440771985 97.33913600110017 37.397241983505246 82.98236581295767 37.66725409753733 7.761769172546207 58.04882254359455 62.49620165368142 40.59959812692937 40.49198188158758 30.134030720589966 61.543456155122264 54.16579423093179 62.36488736939747 6.48719084573679 14.737477479936711 5.223246827470806 44.04712244575564 54.063619556010565 49.40251431022509 36.48247987145741 37.124463897344995 76.15506516005833 97.26064263756359 37.080717851359246 67.37320165222572 33.25541595566078 90.27602812120004 0.7942779455754612 8.941658797116625 31.948752590441345 28.66549049510214 23.230897702772936 35.24310710556482 77.85945608320402 48.1817096613881 49.245708770335504 66.89223465791298 73.0288954593356 32.45748622494418 21.18265704865011 74.55643815331976 80.31574432264986 22.434800428064715 55.313931431428855 47.152914811751224 60.47888357867566 28.00120047504001 31.291624139095873 31.252854046638944 69.07980514595616 42.40688759305815 66.32109247597194 82.45703266959798 77.78001661426059 97.26808245624119 53.43697472201896 9.31295098587267 96.11849124687957 83.14130302499314 28.45772230638327 38.754989099635786 7.5132224311624025 2.1228334318361575 35.41073269763323 49.16479961427682 38.31949350936997 35.1859385522873 70.2787587650858 23.452484091639057 93.16229850922016 40.302176497147315 79.70150245097759 55.60164820344936 29.291113298141546 26.489993337932926 26.253543936175582 36.80540400668508 45.89916378962396 10.441588201164965]
 a=[80.51991363517628 28.20259046831277 31.126177585746007 46.55137540920396 21.719039516806717 38.26423355703238 33.744312282013155 56.68821989780981 19.783993913853813 8.901381416927423 17.226461675555903 83.23415639651867 73.21966779067408 75.79967246880005 1.1353321562635466 49.390590193902014 15.926989116405943 12.22063912578455 3.8202679929201344 32.79353134448716 40.97357160398223 80.09857388233547 34.81518510284572 64.27633052870405 13.721578745414442 29.007862833583197 49.25986250531808 85.13080465851985 83.02074536737992 45.12660408042485 67.89279284528487 50.628815896468716 11.008743550958089 40.77081479629043 65.35150932137637 95.31641514908335 46.83547156832116 0.45805543900626633 28.033679202095264 37.44070336072017 86.99726588394643 66.08451302595043 83.55271782226677 78.3474310981077 73.85275273667385 18.21060019113414 67.77992735510941 82.28055721600408 50.084593921617035 99.37464849666088 31.813869668564365 83.75991805074871 79.74082326378229 57.497292583350145 32.65053087249628 85.6893647949994 61.609246341076954 63.43306984503895 51.867637299246525 37.58400077483445 16.587174423524807 63.806271104255295 50.15129501410939 81.97906257049947 29.96500254888874 31.086554057009728 12.148439448002302 56.30321555033948 47.202511322255816 21.815526478182555 60.795119371980654 18.97381985960176 64.93700337874519 30.257176690504927 53.720490852011906 80.67913150629315 94.01468977949435 26.25413645022354 92.14951952837372 64.47332021733992 85.6474111808816 1.084292780402718 6.687963502554095 92.21769309062363 58.159921777040914 67.69241013642801 91.79137843115987 3.781996780620933 78.21734033698479 64.70420060972725 77.67964832255468 38.63178435615692 32.426650873113246 54.6387689867704 18.288018130026394 57.01133898123034 77.97335891435647 91.14839164269291 87.5535217267871 30.100939470787235 67.81024960773641 1.0678357322391308 6.15053518653964 48.62357324201071 53.03135825035659]
 b=2640.5337349126676
 sigma=[7.820072077362435, 6.023661715495609, 5.423706070346949, 20.014927435662404, 39.81531945964461, 16.29015575069667, 44.41087603053061, 25.40318331807052, 6.1288815560302154, 1.8770439920269562, 74.78857697852109, 9.971826351304264, 3.5374283607914485, 41.40175096590643, 40.71204594321817, 35.28530161661103, 10.533609963616254, 45.926966778149875, 34.331363515580236, 15.475180825363955, 49.5360729757625, 18.53737294112397, 4.398742435496252, 28.909054887563148, 32.489043668591535, 2.7162653989075594, 63.785820559514576, 9.195876803192037, 5.891602677801999, 16.686457802635665, 3.118341332529715, 14.124371911815512, 40.47644036015703, 39.67122372445214, 20.966007241488832, 14.204590936219528, 39.77411380139207, 15.638083114955249, 40.70123497412852, 4.419180063752704, 12.057998055662122, 5.009489651903897, 18.392335328405444, 14.529660512106885, 28.47066306572404, 12.499684438022898, 1.3208800999825092, 57.33304009914813, 77.37128998738518, 20.75469623527111, 39.17133534168756, 6.93050638693912, 4.77145612905401, 0.5214198942418468, 0.9421797563501454, 17.601703801870595, 14.894674396918319, 20.786632929327986, 11.797384343760749, 71.73254918822407, 15.513085226877774, 26.750471773167106, 0.3662243999676282, 45.59137289033856, 21.364803349640834, 7.038746916567127, 39.1765395522817, 21.3172507261028, 1.7948247858410218, 24.085382386681555, 40.43431641542314, 43.837473356583075, 8.388875340398817, 0.033884278110385135, 29.431494968035796, 28.74131549219668, 36.6097038093345, 31.259758425199774, 36.987966881622164, 72.95986945310412, 81.94827669886072, 25.04323845102651, 6.362412480101609, 89.4315989822206, 10.049869077834368, 24.763002155832847, 29.8759698655679, 3.259720734530753, 2.110229353311678, 33.45709151072048, 41.82749494178898, 37.235919160791454, 28.041878028270382, 1.3320507042869767, 3.3637767037268715, 58.56951642440151, 14.489212741077589, 7.484236217302823, 1.3558107165430922, 19.715194688728836, 17.968942876403666, 7.508789669877349, 14.590149538278036, 45.239929787266405, 8.144319837300813]
 =#

 #= mu=[84.15653954723393 31.237869470041346 19.144097788779224 75.51858358510937 35.56627989457834 43.64540772491834 19.005336308146703 67.15079833061912 19.605261617100766 2.705650257648662 68.44226538646936 61.34169298890358 73.04061442969072 7.5235829241197205 59.37988248623382 60.59857579649569 68.06472999430683 36.71239116931106 86.42833472869657 33.32116122467983 82.16210482836456 45.25150396985721 31.177806171526935 29.957972008689225 17.46079702465455 13.82529013456132 19.388006316525896 61.54163209040482 16.883163712758176 61.10784873166445 97.30724779413208 90.61008660087715 77.67409099964117 1.2234679302053686 96.81316305500798 44.13067774743082 23.647482978592784 40.62958885494269 93.83322751576418 25.472775284050808 22.363288977195094 16.428289364054272 36.56877242454916 78.75969605110369 8.397333803504592 52.36445152624872 60.78742763027931 53.31786832382015 68.6484473262923 86.68869459317345 60.626427212974654 37.28866723840469 4.659187891395855 30.318263230458996 50.80848633531326 21.340707880534527 75.36682699617107 3.121063286563097 44.91581380191722 35.497084996325654 50.875232834558915 35.499600590298705 38.19221145421883 90.93295164575599 23.609302509742115 89.99974819800364 7.327293732333395 68.98505543744689 12.631460683562878 73.83833761282277 2.474418181141025 78.52764985238917 49.68479306043964 73.82881518706614 92.62955667927555 23.150672013288165 83.81109668100727 21.134490467323275 7.504259589927487 47.0930238483811 9.672228026310492 81.90511222936539 54.12673459025914 32.82237995612498 22.382063915534022 47.404129588185626 85.92079906514469 11.262765856507817 28.602056174523717 7.6879331805603695 71.62694721090097 73.9673218420156 21.703543635059596 72.50341748620693 87.22540188013022 95.68641514442139 48.48220045686963 50.42179830764325 39.08709935277626 35.54761559502905 8.381113556137077 85.38801712002704 94.50023384877967 99.3561959618556 11.787386130239597]
 a=[74.59314410714666 44.066419532560566 4.341769239435866 92.295424554169 88.99597257570657 92.23485977192209 96.07299559746598 16.780417067877874 19.015075323596587 95.68079118098626 83.22117263475702 68.01318682194147 90.47878915592639 20.427169410989155 99.6536735014211 84.07750895111688 21.813899438451735 52.52939957391266 87.94940804183989 77.70378164593227 18.811386813790588 58.301737037149984 54.52832476694349 93.75048239406595 3.675028705868011 41.676498975239504 32.612085311381755 17.716413109816152 68.17327649755009 38.46003734166826 84.81429744701265 35.42400979935809 76.93165283542433 37.18932649045168 85.91344511001145 69.27767791705804 98.87228134778977 63.6411647079474 17.595101182854012 95.42579735989796 94.77561629307824 78.91577175759409 51.32642115594962 22.929640701322374 99.32780976016707 41.93825793661363 51.01947514090013 77.3520950548436 61.66610755595132 27.83434631537731 69.42944346906052 31.390349834148868 50.15004752615337 19.306124140458202 53.023356068253726 27.5193061355542 10.597917664230138 71.53395624681067 69.56833862926695 12.160527264211062 37.927047872129705 95.56844907168608 24.51919697411553 94.31185379846343 10.098857886246082 3.4549595504678177 35.78030164407588 48.42494284994381 22.016248677297945 96.08915167524363 56.67345426879081 67.2733986083706 79.94210959820724 17.868728019622225 52.60378185210324 17.828407509275944 25.14413427458568 52.0013206025282 5.081568790798629 83.36684260422909 51.79295331624949 4.981482904039791 84.15663923137814 2.068067091075332 7.729432219448595 56.046763570280646 10.358042673407386 14.202320727835282 53.59953163027215 23.432883190096586 16.180327592517774 11.030174021025818 14.064042179084224 14.821231964868309 3.068268075310032 55.21002115022533 7.683115850908417 73.96021279060999 91.18881126624584 30.84553088495823 38.05484817436684 33.79449435895672 93.25426153123 77.80238005456972 31.978375913546753]
 b=2625.8893802095345
 sigma=[22.86504938404423, 24.26587045337591, 8.114579758417001, 67.68186795610599, 34.562386267654986, 21.86056263560035, 6.437746736608138, 66.07624581596896, 15.12194587310596, 1.6057158350760787, 46.62209657153002, 55.62446068517336, 37.824275183525714, 0.3985648326674481, 6.080874710731354, 56.74833803966463, 67.05105083911998, 30.570884189454205, 51.22901793445276, 28.992893850819772, 58.019136652626756, 16.20574146359525, 11.393115384304268, 19.591372829896855, 5.859190609909435, 2.1194217731117915, 10.335591701083604, 35.980358645534174, 7.308352850143323, 30.65253655198331, 34.64770399805799, 7.549481804935595, 53.74454321746545, 0.009999179831139612, 90.02882023127955, 19.76755151058369, 11.122648961207922, 15.561446110867353, 9.61186826766452, 18.89470218502828, 16.557736732523118, 15.666614877202546, 10.307184479560307, 61.020426812774474, 5.067396407434481, 12.169602364079903, 48.47782240781025, 36.76718187768358, 40.11350504787558, 48.94932009628031, 40.62724584460971, 32.53504056093294, 3.8275987888172107, 27.042176240010555, 41.9197360411966, 3.564912292537133, 56.134835902863415, 2.254964702844092, 30.841899997264132, 2.2956741224670325, 12.386922801478159, 34.005646176161456, 22.58989208531734, 85.10500952851777, 21.316529726333943, 57.5764096359253, 5.573505706348415, 22.06564704929899, 3.8175328251573886, 33.30678180487509, 0.4891019175843885, 46.01129541901109, 21.855666731986446, 21.679811881927442, 17.615678530638714, 19.02521089381715, 5.845184039125825, 19.222036527984347, 6.000361984546163, 31.010873146583133, 6.241616363509823, 77.66957481537224, 45.967612104402974, 19.419935482421472, 18.2398474004553, 29.736613826085183, 3.2266381945594387, 5.3641377482734445, 24.643400012347495, 4.473861601582789, 23.54883177033544, 39.499320073803275, 1.1871443118465197, 40.29327109775817, 11.612266182803456, 26.540904644943893, 37.97707159286612, 15.042944018119544, 4.284896265529366, 34.45409418900895, 3.6324512529057844, 27.99397683128721, 51.65342139626956, 58.63441391366412, 9.371119235849099]
 =#

 mu=[54.923590784565434 15.269198453762112 46.07352043106875 86.25433856635541 75.66153636592495 44.38665387141103 77.95511695593467 68.02176481411813 35.21199910423224 90.14984828628849 10.73606418592632 50.87046585023411 14.79270160385071 68.82367351936959 18.965215908087508 67.68279940127532 63.2266377012541 66.44198543900504 85.32470724515706 62.77567918685779 18.90191297367957 54.34567924052794 95.1185023330181 3.047521863928382 28.365911029239765 97.412537931384 12.042076085151365 83.6845832930478 60.407189532099935 59.54211065866084 89.83329719211778 36.97093307545841 62.26845557402544 24.2749675032775 12.203955997672743 71.34666516708941 80.89105710490449 37.561544311805385 9.447405101326423 33.83545111013956 18.690269564294404 75.24678211104813 9.176358237983385 82.73349583285243 89.88247310570216 13.753967217102026 31.11030400171263 63.096307126170906 91.52273348523097 28.73021276546962 49.19972479085261 57.94135818234567 56.04603092108299 8.504015815780729 38.839924057728204 81.7474142986956 57.399130663257736 29.23886306659843 28.768004033859075 69.11475896019724 98.16769233099427 36.95606861829134 61.42181736243245 39.25245343535894 48.72433592612192 68.8398724123546 54.93159760990122 41.60348700407553 74.3098611445756 24.391293678326353 99.54666566394718 75.70744067752159 64.22680133995927 31.570580099776556 24.754283511582752 11.836434673159768 37.988555979111204 53.46758036203977 13.75602402881293 96.8464415372872 23.295195877649356 31.104695123342108 43.223969101900714 46.545933942912 20.618588656708138 24.171519943816666 58.03867392211571 93.76740569963926 70.59353343659556 99.95239866224152 70.51776145578572 93.4080128080481 58.47863309663259 95.65031747294798 98.70457046193305 6.28769753887799 95.86111637915121 80.73985001227152 96.20619730046698 40.037095343695725 51.10445202960027 31.761011014008478 56.18613941379105 88.32419832939784 94.1621049871798]
a=[31.021490020896625 20.899525621606596 19.547957637316937 94.6521811391277 5.805583730926733 73.0064787306861 34.895433918443594 43.44181586847905 29.768650089702664 11.142797269993899 86.64785375582423 36.93661892039519 78.14644052064125 36.92826974530653 24.74815705802729 65.7077177733186 16.361212158356974 94.1268447137435 8.359201070627053 77.98516361886007 39.03679480486127 49.68221232059478 71.69235480807559 38.59251566423963 89.05319181151145 2.3300082893672247 46.01197810688482 49.408843953844915 34.82890212907949 55.855559903390294 63.22368491453424 74.3259024893527 24.82663978693117 21.894633293436062 79.71708899039183 11.439923103565441 35.535214264968396 54.46925073895874 58.21380502914935 78.41527783597557 21.89879678298754 43.35756346903851 46.278615824137944 45.58871590838848 97.4986419326341 69.89722526795698 31.588763904354934 14.993821602276302 83.2011940299557 94.57472682736078 74.9754149204062 26.999652420558284 86.11812206798801 37.83603155745246 63.502001159832275 46.356203711357715 2.68209237988859 66.19826026142968 46.59147257806434 21.338606089834457 47.16631126511698 41.72145330665577 51.22678393273399 25.57538885795745 39.54634389864703 96.94182682320861 83.4136163562728 1.4125610922586462 13.51325266208876 32.83981060095892 75.81188743388714 16.170673688855608 15.884680296401932 0.21694198114584617 84.66237391443495 36.783154634829806 93.53679530463386 10.367452831168212 46.66808979124457 37.917255836549266 15.20170227599954 22.093829156278744 4.983746375255393 81.22484064710476 10.713433664849726 1.1913093767077387 61.97712950059806 54.86408764381514 65.32349719405134 71.77577710096924 66.5657399153816 25.44940490583261 64.88755432698676 99.88421357462522 55.64089808991258 75.31413456354315 38.41053299668845 84.19173446105037 48.68222963416194 81.84286134085359 9.397997395149915 37.49372193262911 55.55710101673169 36.79177671691979 63.64892883401032]
b=2487.3219677232264
sigma=[24.21020148423599, 3.997324517316344, 27.6040332090419, 5.230055131380592, 47.00844861434786, 11.93534440957085, 76.1660176490798, 18.085853556761567, 22.906513829701733, 7.794998966076501, 5.706370069040509, 27.68185505201855, 1.1017231647374908, 18.896857614211793, 4.5579431343222625, 50.459707224676556, 59.17119839680946, 29.9399105246377, 35.32577186100548, 0.33923840074561434, 17.904632043713075, 11.525294173791195, 47.97142536557432, 0.2918305274056893, 5.391890410216429, 70.96904068969441, 4.7153048420336, 35.070178115679546, 42.508444692280975, 24.845861046968373, 2.8482587305872538, 20.75293273691125, 53.88783558187187, 20.609746704247804, 0.5837539019315205, 41.39279207756107, 58.050711967397746, 24.84389365831839, 4.847857241549422, 4.499233969623111, 11.200121053319553, 19.50773551119478, 4.148519000619519, 32.52801884385819, 5.174074114400889, 10.556774859787176, 9.197847776433791, 12.865976428462709, 73.92691027002289, 20.080735051311912, 6.993425477695194, 33.4201821559977, 45.773539712154154, 7.82894113490891, 25.036952354141903, 76.00982685624986, 20.805700567383887, 20.00920089583705, 20.96685452840895, 30.820956545485608, 42.38097636307287, 19.368173077354243, 29.9068073874254, 25.378477580624764, 24.06738686373883, 16.972118523573926, 35.84205862624717, 11.401681019381238, 43.123327211291965, 4.311421782464749, 3.4598239974350604, 72.47128977686211, 41.00034091540179, 2.55204538489084, 24.349466794021783, 11.577855044337985, 29.234628710398194, 23.753162673293456, 6.7081634164036945, 51.28411368218913, 19.691307889656656, 18.563205295238212, 24.97926713145467, 9.671155769954153, 4.098295154755007, 9.086590007127958, 31.675397351936237, 69.61518151008373, 18.537365989701197, 47.452630817847314, 63.84893271979327, 53.55540505348636, 30.550402573157807, 16.94745717086087, 94.00324764297689, 0.08999187161958698, 4.721074664664458, 19.496122698700454, 51.55208114011335, 39.67989832369384, 7.785339005973363, 28.86857973752961, 28.387863224835286, 25.871327766658467, 29.89014537497628]

    #epsilon=0.01
Omega=9.9498743710662

model = Model(optimizer_with_attributes(CPLEX.Optimizer, "CPXPARAM_MIP_Strategy_HeuristicEffort" => 0 , "CPXPARAM_MIP_Strategy_Search" => 1, "CPX_PARAM_CUTSFACTOR" => 1 , "CPXPARAM_Preprocessing_Linear" => 0 , "CPXPARAM_MIP_Interval" => 1))
MOI.set(model, MOI.NumberOfThreads(), 1)
@variable(model, x1, Bin)
@variable(model, x2, Bin)
@variable(model, x3, Bin)
@variable(model, x4, Bin)
@variable(model, x5, Bin)
@variable(model, x6, Bin)
@variable(model, x7, Bin)
@variable(model, x8, Bin)
@variable(model, x9, Bin)
@variable(model, x10, Bin)
@variable(model, x11, Bin)
@variable(model, x12, Bin)
@variable(model, x13, Bin)
@variable(model, x14, Bin)
@variable(model, x15, Bin)
@variable(model, x16, Bin)
@variable(model, x17, Bin)
@variable(model, x18, Bin)
@variable(model, x19, Bin)
@variable(model, x20, Bin)
@variable(model, x21, Bin)
@variable(model, x22, Bin)
@variable(model, x23, Bin)
@variable(model, x24, Bin)
@variable(model, x25, Bin)
@variable(model, x26, Bin)
@variable(model, x27, Bin)
@variable(model, x28, Bin)
@variable(model, x29, Bin)
@variable(model, x30, Bin)
@variable(model, x31, Bin)
@variable(model, x32, Bin)
@variable(model, x33, Bin)
@variable(model, x34, Bin)
@variable(model, x35, Bin)
@variable(model, x36, Bin)
@variable(model, x37, Bin)
@variable(model, x38, Bin)
@variable(model, x39, Bin)
@variable(model, x40, Bin)
@variable(model, x41, Bin)
@variable(model, x42, Bin)
@variable(model, x43, Bin)
@variable(model, x44, Bin)
@variable(model, x45, Bin)
@variable(model, x46, Bin)
@variable(model, x47, Bin)
@variable(model, x48, Bin)
@variable(model, x49, Bin)
@variable(model, x50, Bin)
@variable(model, x51, Bin)
@variable(model, x52, Bin)
@variable(model, x53, Bin)
@variable(model, x54, Bin)
@variable(model, x55, Bin)
@variable(model, x56, Bin)
@variable(model, x57, Bin)
@variable(model, x58, Bin)
@variable(model, x59, Bin)
@variable(model, x60, Bin)
@variable(model, x61, Bin)
@variable(model, x62, Bin)
@variable(model, x63, Bin)
@variable(model, x64, Bin)
@variable(model, x65, Bin)
@variable(model, x66, Bin)
@variable(model, x67, Bin)
@variable(model, x68, Bin)
@variable(model, x69, Bin)
@variable(model, x70, Bin)
@variable(model, x71, Bin)
@variable(model, x72, Bin)
@variable(model, x73, Bin)
@variable(model, x74, Bin)
@variable(model, x75, Bin)
@variable(model, x76, Bin)
@variable(model, x77, Bin)
@variable(model, x78, Bin)
@variable(model, x79, Bin)
@variable(model, x80, Bin)
@variable(model, x81, Bin)
@variable(model, x82, Bin)
@variable(model, x83, Bin)
@variable(model, x84, Bin)
@variable(model, x85, Bin)
@variable(model, x86, Bin)
@variable(model, x87, Bin)
@variable(model, x88, Bin)
@variable(model, x89, Bin)
@variable(model, x90, Bin)
@variable(model, x91, Bin)
@variable(model, x92, Bin)
@variable(model, x93, Bin)
@variable(model, x94, Bin)
@variable(model, x95, Bin)
@variable(model, x96, Bin)
@variable(model, x97, Bin)
@variable(model, x98, Bin)
@variable(model, x99, Bin)
@variable(model, x100, Bin)
@variable(model, 0 <= y1 <= 1)
@variable(model, 0 <= y2 <= 1)
@variable(model, 0 <= y3 <= 1)
@variable(model, 0 <= y4 <= 1)
@variable(model, 0 <= y5 <= 1)
@variable(model, c >= 0)

@objective(model, Max, mu[1]*x1 + mu[2]*x2 + mu[3]*x3 + mu[4]*x4 + mu[5]*x5 + mu[6]*x6 + mu[7]*x7 + mu[8]*x8 + mu[9]*x9 + mu[10]*x10 + mu[11]*x11 + mu[12]*x12 + mu[13]*x13 + mu[14]*x14 + mu[15]*x15 + mu[16]*x16 + mu[17]*x17 + mu[18]*x18 + mu[19]*x19 + mu[20]*x20 + mu[21]*x21 + mu[22]*x22 + mu[23]*x23 + mu[24]*x24 + mu[25]*x25 + mu[26]*x26 + mu[27]*x27 + mu[28]*x28 + mu[29]*x29 + mu[30]*x30 + mu[31]*x31 + mu[32]*x32 + mu[33]*x33 + mu[34]*x34 + mu[35]*x35 + mu[36]*x36 + mu[37]*x37 + mu[38]*x38 + mu[39]*x39 + mu[40]*x40 + mu[41]*x41 + mu[42]*x42 + mu[43]*x43 + mu[44]*x44 + mu[45]*x45 + mu[46]*x46 + mu[47]*x47 + mu[48]*x48 + mu[49]*x49 + mu[50]*x50 + 
mu[51]*x51 + mu[52]*x52 + mu[53]*x53 + mu[54]*x54 + mu[55]*x55 + mu[56]*x56 + mu[57]*x57 + mu[58]*x58 + mu[59]*x59 + mu[60]*x60 + mu[61]*x61 + mu[62]*x62 + mu[63]*x63 + mu[64]*x64 + mu[65]*x65 + mu[66]*x66 + mu[67]*x67 + mu[68]*x68 + mu[69]*x69 + mu[70]*x70 + mu[71]*x71 + mu[72]*x72 + mu[73]*x73 + mu[74]*x74 + mu[75]*x75 + mu[76]*x76 + mu[77]*x77 + mu[78]*x78 + mu[79]*x79 + mu[80]*x80 + mu[81]*x81 + mu[82]*x82 + mu[83]*x83 + mu[84]*x84 + mu[85]*x85 + mu[86]*x86 + mu[87]*x87 + mu[88]*x88 + mu[89]*x89 + mu[90]*x90 + mu[91]*x91 + mu[92]*x92 + mu[93]*x93 + mu[94]*x94 + mu[95]*x95 + mu[96]*x96 + mu[97]*x97 + mu[98]*x98 + mu[99]*x99 + mu[100]*x100 + mu[101]*y1 + mu[102]*y2 + mu[103]*y3 + mu[104]*y4 + mu[105]*y5 - Omega * c)
@constraint(model, a[1]*x1 + a[2]*x2 + a[3]*x3 + a[4]*x4 + a[5]*x5 + a[6]*x6 + a[7]*x7 + a[8]*x8 + a[9]*x9 + a[10]*x10 + a[11]*x11 + a[12]*x12 + a[13]*x13 + a[14]*x14 + a[15]*x15 + a[16]*x16 + a[17]*x17 + a[18]*x18 + a[19]*x19 + a[20]*x20 + a[21]*x21 + a[22]*x22 + a[23]*x23 + a[24]*x24 + a[25]*x25 +  + a[26]*x26 + a[27]*x27 + a[28]*x28 + a[29]*x29 + a[30]*x30 + a[31]*x31 + a[32]*x32 + a[33]*x33 + a[34]*x34 + a[35]*x35 + a[36]*x36 + a[37]*x37 + a[38]*x38 + a[39]*x39 + a[40]*x40 + a[41]*x41 + a[42]*x42 + a[43]*x43 + a[44]*x44 + a[45]*x45 + a[46]*x46 + a[47]*x47 + a[48]*x48 + a[49]*x49 + a[50]*x50  + 
a[51]*x51 + a[52]*x52 + a[53]*x53 + a[54]*x54 + a[55]*x55 + a[56]*x56 + a[57]*x57 + a[58]*x58 + a[59]*x59 + a[60]*x60 + a[61]*x61 + a[62]*x62 + a[63]*x63 + a[64]*x64 + a[65]*x65 + a[66]*x66 + a[67]*x67 + a[68]*x68 + a[69]*x69 + a[70]*x70 + a[71]*x71 + a[72]*x72 + a[73]*x73 + a[74]*x74 + a[75]*x75 + a[76]*x76 + a[77]*x77 + a[78]*x78 + a[79]*x79 + a[80]*x80 + a[81]*x81 + a[82]*x82 + a[83]*x83 + a[84]*x84 + a[85]*x85 + a[86]*x86 + a[87]*x87 + a[88]*x88 + a[89]*x89 + a[90]*x90 + a[91]*x91 + a[92]*x92 + a[93]*x93 + a[94]*x94 + a[95]*x95 + a[96]*x96 + a[97]*x97 + a[98]*x98 + a[99]*x99 + a[100]*x100 + a[101]*y1 + a[102]*y2 + a[103]*y3 + a[104]*y4 + a[105]*y5 <= b)
@constraint(model, c^2 >= sigma[1]^2*x1^2 + sigma[2]^2*x2^2 + sigma[3]^2*x3^2 + sigma[4]^2*x4^2 + sigma[5]^2*x5^2 + sigma[6]^2*x6^2 + sigma[7]^2*x7^2 + sigma[8]^2*x8^2 + sigma[9]^2*x9^2 + sigma[10]^2*x10^2 + sigma[11]^2*x11^2 + sigma[12]^2*x12^2 + sigma[13]^2*x13^2 + sigma[14]^2*x14^2 + sigma[15]^2*x15^2 + sigma[16]^2*x16^2 + sigma[17]^2*x17^2 + sigma[18]^2*x18^2 + sigma[19]^2*x19^2 + sigma[20]^2*x20^2 + sigma[21]^2*x21^2 + sigma[22]^2*x22^2 + sigma[23]^2*x23^2 + sigma[24]^2*x24^2 + sigma[25]^2*x25^2 +  + sigma[26]^2*x26^2 + sigma[27]^2*x27^2 + sigma[28]^2*x28^2 + sigma[29]^2*x29^2 + sigma[30]^2*x30^2 + sigma[31]^2*x31^2 + sigma[32]^2*x32^2 + sigma[33]^2*x33^2 + sigma[34]^2*x34^2 + sigma[35]^2*x35^2 + sigma[36]^2*x36^2 + sigma[37]^2*x37^2 + sigma[38]^2*x38^2 + sigma[39]^2*x39^2 + sigma[40]^2*x40^2 + sigma[41]^2*x41^2 + sigma[42]^2*x42^2 + sigma[43]^2*x43^2 + sigma[44]^2*x44^2 + sigma[45]^2*x45^2 + sigma[46]^2*x46^2 + sigma[47]^2*x47^2 + sigma[48]^2*x48^2 + sigma[49]^2*x49^2 + sigma[50]^2*x50^2  + 
sigma[51]^2*x51^2 + sigma[52]^2*x52^2 + sigma[53]^2*x53^2 + sigma[54]^2*x54^2 + sigma[55]^2*x55^2 + sigma[56]^2*x56^2 + sigma[57]^2*x57^2 + sigma[58]^2*x58^2 + sigma[59]^2*x59^2 + sigma[60]^2*x60^2 + sigma[61]^2*x61^2 + sigma[62]^2*x62^2 + sigma[63]^2*x63^2 + sigma[64]^2*x64^2 + sigma[65]^2*x65^2 + sigma[66]^2*x66^2 + sigma[67]^2*x67^2 + sigma[68]^2*x68^2 + sigma[69]^2*x69^2 + sigma[70]^2*x70^2 + sigma[71]^2*x71^2 + sigma[72]^2*x72^2 + sigma[73]^2*x73^2 + sigma[74]^2*x74^2 + sigma[75]^2*x75^2 + sigma[76]^2*x76^2 + sigma[77]^2*x77^2 + sigma[78]^2*x78^2 + sigma[79]^2*x79^2 + sigma[80]^2*x80^2 + sigma[81]^2*x81^2 + sigma[82]^2*x82^2 + sigma[83]^2*x83^2 + sigma[84]^2*x84^2 + sigma[85]^2*x85^2 + sigma[86]^2*x86^2 + sigma[87]^2*x87^2 + sigma[88]^2*x88^2 + sigma[89]^2*x89^2 + sigma[90]^2*x90^2 + sigma[91]^2*x91^2 + sigma[92]^2*x92^2 + sigma[93]^2*x93^2 + sigma[94]^2*x94^2 + sigma[95]^2*x95^2 + sigma[96]^2*x96^2 + sigma[97]^2*x97^2 + sigma[98]^2*x98^2 + sigma[99]^2*x99^2 + sigma[100]^2*x100^2 + sigma[101]^2*y1^2 + sigma[102]^2*y2^2 + sigma[103]^2*y3^2 + sigma[104]^2*y4^2 + sigma[105]^2*y5^2)
function separate(m::Int , xy_val::Vector{Float64} , T::Vector{Int})
    T_indicator = collect(1:m)
    for i in 1:m
        if T[i] == 0
            T_indicator = 0
        else 
            T_indicator = 1
        end
    end
 
    function f_T(x::AbstractArray)
        return sum(mu[i] * x[i] for i in 1:100) + sum(mu[i+100] for i in T_indicator) - Omega * sqrt(sum(sigma[i] * x[i] for i in 1:100) + sum(sigma[i+100] for i in T_indicator))
    end
    t = sum(mu[i] * xy_val[i] for i in 1:(100+m)) - Omega * norm(sqrt(sigma[i]) * xy_val[i] for i in 1:(100+m))

    x_val = Vector{Float64}(undef, 100)
    for i in 1:100
        x_val[i] = xy_val[i]
    end
    
    R = sortperm(x_val, rev = true)
    pi = Vector{Float64}(undef, 100)
    x = zeros(100)
    function indicator(R::Vector{Int64}, i::Int, x::Vector{Float64})
        for j in 1:i
            x[R[j]] = 1
        end
        return x
    end
    pi[R[1]] = f_T(indicator(R , 1 , x))
    for i in 2:100
        pi[R[i]] = f_T(indicator(R , i , x)) - f_T(indicator(R , i - 1 , x))
    end

    temp = Vector{Float64}(undef, 101)
    for i in 1:100
        temp[i] = pi[i]
    end
    temp[101] = t
    T_nonzero = filter(!iszero,T)
    if pi' * x_val + sum(mu[i+100] * xy_val[i+100] for i in 1:m) + norm(sqrt(sigma[i+100]) .* xy_val[i+100] for i in T_nonzero) > t
        return temp
    else
        return 
    end
end

function myCallBackFunction(cb_data::CPLEX.CallbackContext, context_id::Clong)
    if context_id != CPX_CALLBACKCONTEXT_CANDIDATE
        return
    end
    
    CPLEX.load_callback_variable_primal(cb_data, context_id)

    data_p = Ref{Cint}()
    ret = CPXcallbackgetinfoint(cb_data , CPXCALLBACKINFO_NODECOUNT , data_p)
    if ret != 0
        @warn "error retrieving node_count"
    end
    node_count = data_p[]
    if node_count != 0
        return
    end

    x_val = zeros(Float64 , 105)
    x_val[1] = callback_value(cb_data , x1)
    x_val[2] = callback_value(cb_data , x2)
    x_val[3] = callback_value(cb_data , x3)
    x_val[4] = callback_value(cb_data , x4)
    x_val[5] = callback_value(cb_data , x5)
    x_val[6] = callback_value(cb_data , x6)
    x_val[7] = callback_value(cb_data , x7)
    x_val[8] = callback_value(cb_data , x8)
    x_val[9] = callback_value(cb_data , x9)
    x_val[10] = callback_value(cb_data , x10)
    x_val[11] = callback_value(cb_data , x11)
    x_val[12] = callback_value(cb_data , x12)
    x_val[13] = callback_value(cb_data , x13)
    x_val[14] = callback_value(cb_data , x14)
    x_val[15] = callback_value(cb_data , x15)
    x_val[16] = callback_value(cb_data , x16)
    x_val[17] = callback_value(cb_data , x17)
    x_val[18] = callback_value(cb_data , x18)
    x_val[19] = callback_value(cb_data , x19)
    x_val[20] = callback_value(cb_data , x20)
    x_val[21] = callback_value(cb_data , x21)
    x_val[22] = callback_value(cb_data , x22)
    x_val[23] = callback_value(cb_data , x23)
    x_val[24] = callback_value(cb_data , x24)
    x_val[25] = callback_value(cb_data , x25)
    x_val[26] = callback_value(cb_data , x26)
    x_val[27] = callback_value(cb_data , x27)
    x_val[28] = callback_value(cb_data , x28)
    x_val[29] = callback_value(cb_data , x29)
    x_val[30] = callback_value(cb_data , x30)
    x_val[31] = callback_value(cb_data , x31)
    x_val[32] = callback_value(cb_data , x32)
    x_val[33] = callback_value(cb_data , x33)
    x_val[34] = callback_value(cb_data , x34)
    x_val[35] = callback_value(cb_data , x35)
    x_val[36] = callback_value(cb_data , x36)
    x_val[37] = callback_value(cb_data , x37)
    x_val[38] = callback_value(cb_data , x38)
    x_val[39] = callback_value(cb_data , x39)
    x_val[40] = callback_value(cb_data , x40)
    x_val[41] = callback_value(cb_data , x41)
    x_val[42] = callback_value(cb_data , x42)
    x_val[43] = callback_value(cb_data , x43)
    x_val[44] = callback_value(cb_data , x44)
    x_val[45] = callback_value(cb_data , x45)
    x_val[46] = callback_value(cb_data , x46)
    x_val[47] = callback_value(cb_data , x47)
    x_val[48] = callback_value(cb_data , x48)
    x_val[49] = callback_value(cb_data , x49)
    x_val[50] = callback_value(cb_data , x50)
    x_val[51] = callback_value(cb_data , x51)
    x_val[52] = callback_value(cb_data , x52)
    x_val[53] = callback_value(cb_data , x53)
    x_val[54] = callback_value(cb_data , x54)
    x_val[55] = callback_value(cb_data , x55)
    x_val[56] = callback_value(cb_data , x56)
    x_val[57] = callback_value(cb_data , x57)
    x_val[58] = callback_value(cb_data , x58)
    x_val[59] = callback_value(cb_data , x59)
    x_val[60] = callback_value(cb_data , x60)
    x_val[61] = callback_value(cb_data , x61)
    x_val[62] = callback_value(cb_data , x62)
    x_val[63] = callback_value(cb_data , x63)
    x_val[64] = callback_value(cb_data , x64)
    x_val[65] = callback_value(cb_data , x65)
    x_val[66] = callback_value(cb_data , x66)
    x_val[67] = callback_value(cb_data , x67)
    x_val[68] = callback_value(cb_data , x68)
    x_val[69] = callback_value(cb_data , x69)
    x_val[70] = callback_value(cb_data , x70)
    x_val[71] = callback_value(cb_data , x71)
    x_val[72] = callback_value(cb_data , x72)
    x_val[73] = callback_value(cb_data , x73)
    x_val[74] = callback_value(cb_data , x74)
    x_val[75] = callback_value(cb_data , x75)
    x_val[76] = callback_value(cb_data , x76)
    x_val[77] = callback_value(cb_data , x77)
    x_val[78] = callback_value(cb_data , x78)
    x_val[79] = callback_value(cb_data , x79)
    x_val[80] = callback_value(cb_data , x80)
    x_val[81] = callback_value(cb_data , x81)
    x_val[82] = callback_value(cb_data , x82)
    x_val[83] = callback_value(cb_data , x83)
    x_val[84] = callback_value(cb_data , x84)
    x_val[85] = callback_value(cb_data , x85)
    x_val[86] = callback_value(cb_data , x86)
    x_val[87] = callback_value(cb_data , x87)
    x_val[88] = callback_value(cb_data , x88)
    x_val[89] = callback_value(cb_data , x89)
    x_val[90] = callback_value(cb_data , x90)
    x_val[91] = callback_value(cb_data , x91)
    x_val[92] = callback_value(cb_data , x92)
    x_val[93] = callback_value(cb_data , x93)
    x_val[94] = callback_value(cb_data , x94)
    x_val[95] = callback_value(cb_data , x95)
    x_val[96] = callback_value(cb_data , x96)
    x_val[97] = callback_value(cb_data , x97)
    x_val[98] = callback_value(cb_data , x98)
    x_val[99] = callback_value(cb_data , x99)
    x_val[100] = callback_value(cb_data , x100)
    x_val[101] = callback_value(cb_data , y1)
    x_val[102] = callback_value(cb_data , y2)
    x_val[103] = callback_value(cb_data , y3)
    x_val[104] = callback_value(cb_data , y4)
    x_val[105] = callback_value(cb_data , y5)

    #add heuristic to pick T
    T = collect(1:m)
    for i in 1:m
        if x_val[i+100] <= 0.33
            T[i] = 0
        elseif x_val[i+100] >= 0.66
            T[i] = T[i]
        else 
            r = rand((0,1))
            if r == 0
                T[i] = 0
            else
                T[i] = T[i]
            end
        end
    end
    T_nonzero = filter(!iszero,T)
    temp = separate(m, x_val , T)
    y = [y1 , y2 , y3 , y4 , y5]
    if temp !== nothing
        MOI.submit(model, MOI.UserCut(cb_data), @build_constraint(temp[1]*x1 + temp[2]*x2 + temp[3]*x3 + temp[4]*x4 + temp[5]*x5 + temp[6]*x6 + temp[7]*x7 + temp[8]*x8 + temp[9]*x9 + temp[10]*x10 + temp[11]*x11 + temp[12]*x12 + temp[13]*x13 + temp[14]*x14 + temp[15]*x15 + temp[16]*x16 + temp[17]*x17 + temp[18]*x18 + temp[19]*x19 + temp[20]*x20 + temp[21]*x21 + temp[22]*x22 + temp[23]*x23 + temp[24]*x24 + temp[25]*x25 + temp[26]*x26 + temp[27]*x27 + temp[28]*x28 + temp[29]*x29 + temp[30]*x30 + temp[31]*x31 + temp[32]*x32 + temp[33]*x33 + temp[34]*x34 + temp[35]*x35 + temp[36]*x36 + temp[37]*x37 + temp[38]*x38 + temp[39]*x39 + temp[40]*x40 + temp[41]*x41 + temp[42]*x42 + temp[43]*x43 + temp[44]*x44 + temp[45]*x45 + temp[46]*x46 + temp[47]*x47 + temp[48]*x48 + temp[49]*x49 + temp[50]*x50 + temp[51]*x51 + temp[52]*x52 + temp[53]*x53 + temp[54]*x54 + temp[55]*x55 + temp[56]*x56 + temp[57]*x57 + temp[58]*x58 + temp[59]*x59 + temp[60]*x60 + temp[61]*x61 + temp[62]*x62 + temp[63]*x63 + temp[64]*x64 + temp[65]*x65 + temp[66]*x66 + temp[67]*x67 + temp[68]*x68 + temp[69]*x69 + temp[70]*x70 + temp[71]*x71 + temp[72]*x72 + temp[73]*x73 + temp[74]*x74 + temp[75]*x75 + temp[76]*x76 + temp[77]*x77 + temp[78]*x78 + temp[79]*x79 + temp[80]*x80 + temp[81]*x81 + temp[82]*x82 + temp[83]*x83 + temp[84]*x84 + temp[85]*x85 + temp[86]*x86 + temp[87]*x87 + temp[88]*x88 + temp[89]*x89 + temp[90]*x90 + temp[91]*x91 + temp[92]*x92 + temp[93]*x93 + temp[94]*x94 + temp[95]*x95 + temp[96]*x96 + temp[97]*x97 + temp[98]*x98 + temp[99]*x99 + temp[100]*x100 + mu[101]*y1 + mu[102]*y2 + mu[103]*y3 + mu[104]*y4 + mu[105]*y5 + sqrt(sum(sigma[i+100]^2 * y[i]^2 for i in T_nonzero)) <= temp[101]))
    end
end

MOI.set(model, CPLEX.CallbackFunction(), myCallBackFunction)
optimize!(model)
print(objective_value(model))